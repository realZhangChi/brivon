<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Brivon</title><link>https://brivon.fun/</link><description>.NET Core、Abp框架、领域驱动、设计模式及程序架构等知识分享</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Mon, 18 Mar 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://brivon.fun/index.xml" rel="self" type="application/rss+xml"/><item><title>.NET 10 预览版新特性全面解析</title><link>https://brivon.fun/posts/dotnet10-new-features/</link><pubDate>Mon, 18 Mar 2024 00:00:00 +0000</pubDate><author>xxxx</author><guid>https://brivon.fun/posts/dotnet10-new-features/</guid><description><![CDATA[<p>微软最近发布了 .NET 10 的首个预览版，这是一个重要的长期支持（LTS）版本。本文将为大家详细介绍 .NET 10 中的主要新特性和改进。</p>
<h2 id="运行时改进">运行时改进</h2>
<ul>
<li><strong>数组接口方法去虚拟化</strong>：优化了数组操作的性能</li>
<li><strong>值类型数组的栈分配</strong>：提升了内存使用效率</li>
<li><strong>AVX10.2 支持</strong>：增强了向量运算能力</li>
</ul>
<h2 id="核心库更新">核心库更新</h2>
<ul>
<li><strong>证书指纹支持</strong>：现在支持除 SHA-1 外的其他指纹算法</li>
<li><strong>PEM 编码数据处理</strong>：增强了对 ASCII/UTF-8 中 PEM 编码数据的处理能力</li>
<li><strong>ISOWeek 新方法</strong>：为 DateOnly 类型添加了新的 ISOWeek 方法重载</li>
<li><strong>字符串规范化 API</strong>：新增了处理字符 Span 的字符串规范化 API</li>
<li><strong>字符串比较增强</strong>：添加了数字排序的字符串比较功能</li>
<li><strong>TimeSpan 改进</strong>：新增了 FromMilliseconds 的单参数重载</li>
<li><strong>ZipArchive 性能提升</strong>：显著提升了压缩性能和内存使用效率</li>
<li><strong>OrderedDictionary 增强</strong>：为 OrderedDictionary&lt;TKey, TValue&gt; 添加了新的 TryAdd 和 TryGetValue 重载</li>
<li><strong>矩阵变换方法</strong>：增加了更多左手矩阵变换方法</li>
</ul>
<h2 id="c-14-语言特性">C# 14 语言特性</h2>
<ul>
<li><strong>泛型中的 nameof</strong>：在未绑定泛型中支持 nameof 操作符</li>
<li><strong>隐式 span 转换</strong>：简化了 Span 类型的使用</li>
<li><strong>字段支持的属性</strong>：简化了属性的定义和访问</li>
<li><strong>简单 lambda 参数的修饰符</strong>：增强了 lambda 表达式的灵活性</li>
<li><strong>实验性功能</strong>：数据段中的字符串字面量</li>
</ul>
<h2 id="entity-framework-core-改进">Entity Framework Core 改进</h2>
<ul>
<li><strong>LeftJoin 支持</strong>：新增了 LINQ 的 LeftJoin 操作符支持</li>
<li><strong>ExecuteUpdateAsync 增强</strong>：现在支持普通的非表达式 lambda</li>
</ul>
<h2 id="aspnet-core-更新">ASP.NET Core 更新</h2>
<ul>
<li><strong>OpenAPI 3.1 支持</strong>：内置支持 OpenAPI 3.1，并将其设为生成 OpenAPI 文档的默认版本</li>
<li><strong>Blazor 优化</strong>：JavaScript 实现作为静态 Web 资源发布，大小减少 76%</li>
</ul>
<h2 id="容器支持">容器支持</h2>
<ul>
<li><strong>Ubuntu 24.04 支持</strong>：10.0-preview 标签现使用 Ubuntu 24.04</li>
<li><strong>Debian 支持</strong>：Debian 镜像使用 Debian 13 &ldquo;Trixie&rdquo;</li>
<li><strong>Ubuntu Chiseled 改进</strong>：现包含 Chisel 清单</li>
</ul>
<h2 id="总结">总结</h2>
<p>.NET 10 预览版展示了微软在性能优化、开发体验和跨平台支持方面的持续投入。作为一个 LTS 版本，它将为开发者带来更多稳定性和新功能。随着后续预览版的发布，我们期待看到更多令人兴奋的特性加入。</p>]]></description></item><item><title>Blazor WebAssembly性能优化实战指南</title><link>https://brivon.fun/posts/blazor-wasm-optimization/</link><pubDate>Mon, 18 Mar 2024 00:00:00 +0000</pubDate><author>xxxx</author><guid>https://brivon.fun/posts/blazor-wasm-optimization/</guid><description>&lt;p>在构建大型Blazor WebAssembly应用时，性能优化往往成为开发团队面临的最大挑战之一。本文将从实际项目经验出发，深入探讨Blazor WebAssembly的性能优化策略。&lt;/p></description></item><item><title>C# 模式匹配全面指南：从基础到高级应用</title><link>https://brivon.fun/posts/csharp-pattern-matching/</link><pubDate>Mon, 18 Mar 2024 00:00:00 +0000</pubDate><author>xxxx</author><guid>https://brivon.fun/posts/csharp-pattern-matching/</guid><description>&lt;p>模式匹配是C#中一个强大而优雅的特性，它能让我们以更简洁、更直观的方式处理复杂的数据结构和类型检查。本文将深入探讨C#中的各种模式匹配技术，从基础概念到高级应用。&lt;/p></description></item><item><title>MAUI自定义控件开发实战指南</title><link>https://brivon.fun/posts/maui-custom-controls/</link><pubDate>Mon, 18 Mar 2024 00:00:00 +0000</pubDate><author>xxxx</author><guid>https://brivon.fun/posts/maui-custom-controls/</guid><description>&lt;p>在.NET MAUI应用开发中，虽然框架提供了丰富的内置控件，但有时我们仍需要开发自定义控件来满足特定的业务需求。本文将深入探讨MAUI自定义控件的开发技术，从基础概念到实战应用。&lt;/p></description></item><item><title>WPF MVVM模式深度解析：原理与实践</title><link>https://brivon.fun/posts/wpf-mvvm-deep-dive/</link><pubDate>Mon, 18 Mar 2024 00:00:00 +0000</pubDate><author>xxxx</author><guid>https://brivon.fun/posts/wpf-mvvm-deep-dive/</guid><description>&lt;p>MVVM（Model-View-ViewModel）是WPF应用程序开发中最重要的设计模式之一。本文将深入探讨MVVM的核心概念、实现原理以及最佳实践，帮助您构建可维护、可测试的WPF应用程序。&lt;/p></description></item><item><title>深入理解Razor组件生命周期：从创建到销毁</title><link>https://brivon.fun/posts/razor-component-lifecycle/</link><pubDate>Mon, 18 Mar 2024 00:00:00 +0000</pubDate><author>xxxx</author><guid>https://brivon.fun/posts/razor-component-lifecycle/</guid><description>&lt;p>Razor组件是Blazor应用程序的核心构建块，理解其生命周期对于开发高质量的Web应用至关重要。本文将深入探讨Razor组件的完整生命周期，包括各个阶段的细节和最佳实践。&lt;/p></description></item></channel></rss>